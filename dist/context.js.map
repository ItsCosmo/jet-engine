{"version":3,"sources":["../src/context.js"],"names":["JetContext","stack","namedContext","n","length","context","name","clone","JSON","parse","stringify","newContext","value","unshift","a","ctx","result","attribute","index","b","indexOf","substr","undefined","indices","replace","trim","split","i","get","d","attr","getAttr","expr","charAt","getContext","slice","test","parseInt","getObj"],"mappings":"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","file":"context.js","sourcesContent":["class JetContext {\n  constructor() {\n    this.stack = [];\n    this.namedContext = {};\n  }\n\n  top(n = 0) {\n    return this.stack.length ? this.stack[n] : {};\n  }\n\n  push(context, name) {\n    let clone = context;\n\n    if (typeof context === 'object') {\n      clone = JSON.parse(JSON.stringify(context));\n    }\n\n    const newContext = {\n      value: clone\n    };\n\n    if (name) {\n      newContext.name = name;\n      this.namedContext[name] = newContext;\n    }\n\n    this.stack.unshift(newContext);\n  }\n\n  pop() {\n    this.stack.unshift();\n  }\n\n  getAttr(a, ctx) {\n    let result = ctx;\n    let attribute = a;\n    let index;\n\n    const b = a.indexOf('[');\n\n    if (b !== -1) {\n      attribute = a.substr(0, b);\n      index = a.substr(b);\n      result = attribute === '' ? result : result[attribute];\n      if (result === undefined) {\n        return result;\n      }\n      const indices = index.replace(/[[\\]]/g,' ').trim().replace(/\\s{2,}/g, ' ').split(' ');\n      for (const i of indices) {\n        result = result[this.get(i)];\n        if (result === undefined) {\n          return result;\n        }\n      }\n      return result;\n    }\n\n    return result[attribute];\n  }\n\n  getObj(d, ctx) {\n    let result = ctx;\n\n    for (const attr of d) {\n      result = this.getAttr(attr, result);\n      if (result === undefined) {\n        return result;\n      }\n    }\n\n    return result;\n  }\n\n  getContext(expr, context) {\n    let result;\n    if (expr === '') {\n      return '';\n    }\n\n    if (expr === '.') {\n      return context[0].value;\n    }\n\n    if (expr.charAt(0) === '.') {\n      return this.getContext(expr.slice(1), context.slice(0,1));\n    }\n\n    if (/^\\d*$/.test(expr)) { // it's a number\n      return parseInt(expr, 10);\n    }\n\n    if (/^\\$\\$/.test(expr)) { // it's a special $$attribute\n      return context[0][expr.slice(2)];\n    }\n\n    const d = expr.split('.');\n    for (const ctx of context) {\n      result = this.getObj(d, ctx.value);\n      if (result !== undefined) {\n        return result;\n      }\n    }\n\n    return '';\n  }\n\n  get(expr = '') {\n    return this.getContext(expr, this.stack);\n  }\n}\n\nexport default JetContext;\n"]}